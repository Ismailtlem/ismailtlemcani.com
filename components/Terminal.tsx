'use client';

import { useEffect, useRef, useState } from 'react';

const Terminal = () => {
  const [history, setHistory] = useState<Array<{ command: string; output: string }>>([]);
  const terminalRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    if (terminalRef.current) {
      terminalRef.current.scrollTop = terminalRef.current.scrollHeight;
    }
  }, [history]);

  useEffect(() => {
    setHistory([
      {
        command: '',
        output: `ismail@paris:~$ ssh guest@ismailtlemcani.com
Welcome to Ismail's digital playground ðŸš€`,
      },
      {
        command: 'status',
        output: `â•­â”€ System Status â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®
â”‚ Status: Online ðŸŸ¢                          â”‚
â”‚ Location: Paris, France ðŸ‡«ðŸ‡·                â”‚
â”‚ Uptime: 24/7                               â”‚
â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯

â•­â”€ Tech Stack â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®
â”‚ Frontend                                   â”‚
â”‚  â”œâ”€ React 18                               â”‚
â”‚  â”œâ”€ Next.js 14                            â”‚
â”‚  â”œâ”€ TypeScript                            â”‚
â”‚  â””â”€ Tailwind CSS                          â”‚
â”‚                                            â”‚
â”‚ Backend                                    â”‚
â”‚  â”œâ”€ Node.js                               â”‚
â”‚  â”œâ”€ Python                                â”‚
â”‚  â””â”€ FastAPI                               â”‚
â”‚                                            â”‚
â”‚ Database                                   â”‚
â”‚  â”œâ”€ PostgreSQL                            â”‚
â”‚  â””â”€ MongoDB                               â”‚
â”‚                                            â”‚
â”‚ Cloud & Tools                              â”‚
â”‚  â”œâ”€ AWS                                    â”‚
â”‚  â”œâ”€ Vercel                                â”‚
â”‚  â”œâ”€ Docker                                â”‚
â”‚  â””â”€ Git                                    â”‚
â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯

ðŸŽ¯ Current Focus: Building innovative web solutions
ðŸ’¡ Always learning and improving`,
      },
    ]);
  }, []);


  return (
    <div className="bg-gray-900 text-green-400 font-mono text-sm rounded border border-gray-700 max-w-2xl mx-auto my-8 w-full">

      <div 
        ref={terminalRef} 
        className="p-3 h-64 sm:h-64 overflow-y-auto scrollbar-thin"
      >
        {history.map((entry, index) => (
          <div key={index} className="mb-1">
            {entry.command && (
              <div className="flex">
                <span className="text-green-500 mr-1">guest@ismailtlemcani.com:~$</span>
                <span className="text-white ml-1">{entry.command}</span>
              </div>
            )}
            <pre className="whitespace-pre-wrap text-green-300 text-xs">{entry.output}</pre>
          </div>
        ))}
      </div>
    </div>
  );
};

export default Terminal;
